swagger: '2.0'
#host:
################################################################################
#                              API Information                                 #
################################################################################
info:
  version: 2.0.0
  title: Luminate Security Management API
  description: |
    This is the REST API specification for Luminate Security's management operations.

    The API uses common RESTful resourced based URL conventions. JSON is returned
    in all responses. Results of API call are indicated by the HTTP response codes
    and upon any error additional error information is returned in the response body.

    The base-URL that should be used should be `api.`&lt;`tenant-name`&gt;`.luminatesec.com`.
    For example, if you are accessing the administration portal by accessing
    _admin.company.luminatesec.com_ then your API base-URL should be _api.company.luminatesec.com_

    ## Authorization
    Authorization is done using [OAuth2](https://tools.ietf.org/html/rfc6749) with the [Bearer authentication scheme](https://tools.ietf.org/html/rfc6750).

    In order to obtain OAuth 2.0 client credentials, open the administration UI,
    go to the `Settings` tab and choose `API Clients` and then click on `Create API Client`.

    A Client-ID and Client-Secret will then be generated for your new client.

    POST a Base64 encoded Client-ID and Client-Secret using the Basic-Authentication scheme
    in order to receive an access token. Base64 should be done on "<client-ID>:<client-secret>" (note the colon)
    i.e. the Authorization header should be: `Authorization: Basic Base64($CLIENT_ID:$CLIENT_SECRET)`

    For example:
    <B>
      ```
      curl -X POST -i -H "Authorization: Basic RVFKVU13VXk3dVVtSUt0MFpSc1FpQ1c3NzEwYW42cHg6T1VSalg5MWFtNnZVQ01TWW1reUtubWstS05Xb1lKeXVQRjFTX3RCdG9rajhzS09IZEhBWThwdkkzT21TOGFUSAo=" "https://api.company.luminatesec.com/v1/oauth/token"
      ```
    </B>

    You may also utilize CURL's `-u` option for that matter:
    <B>
      ```
      curl -X POST -i -u "$CLIENT_ID:$CLIENT_SECRET" "https://api.company.luminatesec.com/v1/oauth/token"
      ```
    </B>

    Once you obtain the Bearer access-token, call the the API with the Bearer token.
    For example:
    <B>
      ```
      curl -H "Authorization: Bearer b8246240-8e79-495c-9959-332af85d5014" "https://api.company.luminatesec.com/v1/applications/d9f6ca17-9f2c-488c-aa86-51924a37092e"
      ```
    </B>

    ## Auditing

    All authentication operations and write operations (POST, PUT, DELETE) are audited.

    ## Request ID
    Each request submitted to the API will return a unique request ID that is generated by
    the API.
    The request ID will be returned in header `x-lum-request-id`.
    If you need to contact us about any specific request then this ID will serve as a
    refernce ID to the given request.

    ## Rate-limiting
    The API has a rate limit of 5 requests per second. If you have hit the rate limit
    then a 429 status code will be returned. In such cases you should back-off from submitting
    new requests for 1 second before resuming.

    Note that rate-limitation applies to the accumulated requests of **all** of your clients.
    For example, if you have 6 clients submitting requests simultaneously at a rate of 1 request
    per second for each one then one of them is likely to get a 429 status code.

    ## Error Responses

    Some response status codes such as 404, 429 will not contain additional information in the
    response body. Other response status codes will return a body with an error_code and
    error_message attribute where additional information regarding the error may be provided.
    For example:

    ```
      {
        "error_code": "bad_request",
        "error_message": "Invalid request parameters: invalid application-ID"
      }
    ```
    Common error status codes:
    - HTTP 301: Resource URI has been moved - redirect your request to the to the URI provide on
     the`Location` response header.
    - HTTP 400: An invalid attribute or parameter has been supplied.
     Additional information regarding validation errors may be available as an *error_message*
     in the response body.
    - HTTP 404: The given resource could not be found.
    - HTTP 429: Rate-limit has been exceeded. (See Rate-limiting section for additional info)
    - HTTP 500: An internal error occurred. Additional information may be available as an *error_message*
     in the response body.

    ## Versioning and Compatibility
    The latest major version is `v2`.

    The API version is part of the URL path (e.g. /v2/applications )
    As long as you use a given version, no breaking changes will be introduced.
    However, if you change API versions (e.g. start using /v2/applications instead
    of /v1/applications ) then you may expect breaking changes.

    Note that minor changes may be introduced in a given API changes, but those
    will alway be backwards compatible. Such minor changes may be new non-mandatory
    attributes on requests or new attributes on responses.

    ## Domain Models
    
    - Site: a represention of the physical or virtual data-center your applications resides in.
    - Connector: the Luminate connector -  lightweight docker container, that provides connectivity to the internal resources via the site to Luminate Secure Access Cloud.â€¯
    - Application: the internal resource to be published using Luminate.
    - Directory-Entity-Bindings is a 3-tuple represents the application authorization policy and including the following: 
      -	Application
      -	Directory-Entity: the user/group/api-client identity to bind to the application 
      -	Security-Role: the security related settings and privileges of the directory-entity on the associated application. The settings include the SSH-User accounts this directory-entity allow to connect to. Authorization method (whether SSH-Keys are allowed) and so on.  
    - Identity: a user/group from the identity-provider (such as Okta, Azure, etc.) or the local identity-provider. 

    ## Support

    For additional help and support you may refer to our support at https://luminate.zendesk.com .

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: api.company.luminatesec.com
basePath: /v2
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
security:
  - OAuth: []




################################################################################
#                                   Tags                                       #
################################################################################
tags:
  - name: Applications
    description: |
      Operations on Application resources such as application creation, update
      and deletion, as well as assignment of users and user groups to applications.

################################################################################
#                                   Parameters                                 #
################################################################################
parameters:
  AuthBasicHeader:
    name: Authorization
    description: OAuth Basic Authentication.
    type: string
    in: header
    default: "{{Basic}}"
    required: true
  AuthHeader:
    name: Authorization
    description: OAuth bearer token.
    type: string
    in: header
    default: "{{Bearer}}"
    required: true
  AppIdFilterQuery:
    name: app_id
    description: Filter results by Application ID.
    type: string
    in: query
    required: false
  QueryFilterHeader:
    name: QueryFilter
    description: the query filter
    type: string
    in: header
    required: false
  FilterPath:
    name: filter
    description: the query filter
    type: string
    in: query
    required: false
  Email:
    name: email
    description: the email filter
    type: string
    in: query
    required: false
  PageSizeHeader:
    name: ItemsPerPage
    description: the query filter
    type: string
    in: query
    required: false
  Filter:
    name: filter
    description: the query filter
    type: string
    in: query
    required: false
  Size:
    name: size
    description: the query size page
    type: string
    in: query
    required: false
  Sort:
    name: sort
    description: the query sort
    type: string
    in: query
    required: false
  NamePath:
    name: name
    description: the application name
    type: string
    in: path
    required: true
  SortBy:
    name: SortBy
    description: |
      Sort by.

      The sorting format is `<field>:<direction>`. Direction can be `asc` or `desc`.
      Can sort only by one field.

      Allowed fields for `Groups`: `name'
      Allowed fields for `Users`: `email'
    in: query
    required: false
    type: string
  ItemsPerPage:
    name: "perPage"
    in: query
    description: |
      Items per page
    required: false
    maximum: 25
    minimum: 1
    default: 25
    type: integer
  DisablePagination:
    name: "disablePagination"
    in: query
    description: |
      Disable pagination.

      This will return `content` as a root element.
    required: false
    type: boolean
  PageOffsetHeader:
    name: "pageOffset"
    in: query
    description: |
      Page offset

      Depending on the Identity Provider, this field can either be a number or a string. It can't be assumed and a valid
      value must be used from a response returned by the directory-service for the previous page.

      If not specified it will fetch the first page.
    required: false
    type: string

################################################################################
#                                           Paths                              #
################################################################################
paths:
      
#####################################
#         Site Paths                #
#####################################          
  /sites/:
    get:
      tags:
        - Sites
      summary: List Sites
      description: |
        Enumerates Sites added to your Luminate tenant.
        Returns Array of Site

          Filtering by Application ID may be applied - in such a case, Sites
           which are associated with this Application will be returned. If the
           Application ID does not exist then an empty array will be returned.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - $ref: '#/parameters/AppIdFilterQuery'
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Site'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
    post:
      tags:
        - Sites
      summary: Create Site
      description: |
                Creates a new Site resource with a unique ID.
                The new resource will be returned in the response
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: site
          in: body
          description: hh
          schema:
            $ref: '#/definitions/SitePostBody'
          required: true
      responses:
        201:
          description: Site was created successfully
          schema:
            $ref: '#/definitions/Site'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Site not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
  /sites/{site_id}:
    get:
      tags:
        - Sites
      summary: Get Site
      description: Returns a given Site resource
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: site_id
          in: path
          description: The Site ID
          required: true
          type: string
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            $ref: '#/definitions/Site'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Site not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
    put:
      tags:
        - Sites
      summary: Update Site
      description: Updates a given Site resource
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: site_id
          in: path
          description: The Site ID
          required: true
          type: string
        - name: site
          in: body
          description: The Site JSON to update/
          schema:
            $ref: '#/definitions/SitePostBody'
          required: true
      responses:
        200:
          description: Site was updated successfully
          schema:
            $ref: '#/definitions/Site'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Site not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
    delete:
      tags:
        - Sites
      summary: Delete Site
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: site_id
          in: path
          description: The Site ID
          required: true
          type: string
      responses:
        200:
          description: Site was deleted successfully
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Site not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
  /sites/{site_id}/status:
    get:
      tags:
        - Sites
      summary: Get Site Status
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: site_id
          in: path
          description: The Site ID
          required: true
          type: string
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            $ref: '#/definitions/SiteStatusResponse'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Site not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
#####################################
#         Site Paths                #
#####################################     
  /connectors/:
    get:
      tags:
        - Connectors
      summary: List Connectors
      description: |
        Enumerates connectors added to your Luminate tenant.
        
        Returns Array of Applications
      operationId: listAllConnectors
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/AuthHeader'
      produces:
        - application/json;charset=UTF-8
      responses:
        '200':
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Connector'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
    post:
      tags:
        - Connectors
      summary: Add Connector
      description: |
            Creates a new Connector resource with a unique ID.
            The new resource will be returned in the response
      operationId: addConnector
      consumes:
        - application/json

      produces:
        - application/json;charset=UTF-8
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: bind_to_site_id
          in: query
          description: |
              The Site ID to which this connector should be associated with. If not specified then
              the connector will not be associated to a Site yet.
          type: string
          required: false
        - name: connector
          in: body
          description: The connector JSON to update/insert
          schema:
            $ref: '#/definitions/ConnectorPostRequest'
          required: true
      responses:
        201:
          description: Connector was created successfully
          schema:
            $ref: '#/definitions/Connector'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Connector not found
        500:
            description: Internal service error
            schema:
              $ref: '#/definitions/InternalError'
  /connectors/{connector_id}:
    parameters:
      - $ref: '#/parameters/AuthHeader'
      - name: connector_id
        in: path
        description: The connector ID
        required: true
        type: string
    get:
      tags:
        - Connectors
      summary: Get Connector
      description: Fetches an Connector from your Luminate tenant by id
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            $ref: '#/definitions/Connector'
        400:
          description: Invalid request parameters
        404:
          description: Connector not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
    put:
      tags:
        - Connectors
      summary: Updates a connector in your tenant.
      description: Fetches an Connector from your Luminate tenant by id
      parameters:
        - name: connector
          in: body
          description: The connector JSON to update/insert
          schema:
            $ref: '#/definitions/Connector'
          required: true
      responses:
        200:
          description: Connector was updated successfully
          schema:
            $ref: '#/definitions/Connector'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Connector not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
    delete:
      tags:
        - Connectors
      summary: Delete a given Connector resource
      parameters:
        - name: bind_to_site_id
          in: query
          description: |
              The Site ID from which this connector should be disassociated.
          type: string
          required: false
      responses:
        200:
          description: Connector was deleted successfully
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Connector not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
  /connectors/{connector_id}/command:
    parameters:
      - $ref: '#/parameters/AuthHeader'
      - name: connector_id
        in: path
        description: The connector ID
        required: true
        type: string
    post:
        tags:
          - Connectors
        summary: Generate docker installation commands for this connector.
        description: |
              Generate docker installation commands (for all deployment types) for this connector by passing all the additional information as a post body
        parameters:
          - name: additional_config
            in: body
            description: The additional configuration to pass to command generator JSON
            schema:
              $ref: '#/definitions/GenCommandAdditionalConfig'
            required: false
        responses:
            200:
              description: Connector installation commands
              schema:
                $ref: '#/definitions/ConnectorInstallationCommand'
            400:
              description: Invalid request parameters
              schema:
                $ref: '#/definitions/ValidationError'
            404:
              description: Connector not found
            500:
              description: Internal service error
              schema:
                $ref: '#/definitions/InternalError'
#####################################
#         Applications Paths        #
#####################################
  /applications/:
    get:
      tags:
        - Applications
      summary: List Applications
      description:  |
        Enumerates applications added to your Luminate tenant.
        
        Returns Array of Applications
      operationId: listAllApps
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - $ref: '#/parameters/Filter'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Size'
      produces:
        - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageÂ«ApplicationDtoÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - Applications
      summary: Add Application
      description: |
            Add a new application in your Luminate tenant (â€˜idâ€™ attribute generated automatically and must not be specified on create operation)

            The created Application is not assigned to a Site.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: application
          in: body
          description: Adding a new application
          schema:
            $ref: '#/definitions/ApplicationRequestDto'
          required: true
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            $ref: '#/definitions/ApplicationDto'
          headers:
            x-lum-request-id:
              type: string
              description: The request ID of this request.
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
  /applications/{application_id}/site-binding/{site_id}:
    put:
      tags:
        - Applications
      summary: Assign Application to Site
      description: Assign your Application to an existing Site.
      operationId: Assign application to Site
      parameters:
      - $ref: '#/parameters/AuthHeader'
      - name: application_id
        in: path
        description: the Application ID
        required: true
        type: string
      - name: site_id
        in: path
        description: The Site ID
        required: true
        type: string
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /applications/{application_id}:
    get:
      tags:
        - Applications
      summary: Get Application
      description: Fetches an Application from your Luminate tenant by id
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: application_id
          in: path
          description: The application ID
          required: true
          type: string
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            $ref: '#/definitions/ApplicationDto'
          headers:
            x-lum-request-id:
              type: string
              description: The request ID of this request.
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    put:
      tags:
        - Applications
      summary: Update Application
      description:
        Updates an application in your tenant.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: application_id
          in: path
          description: The application ID
          required: true
          type: string
        - name: applicaiton
          in: body
          description: |
              {
                  "name": "luminate API app",
                  "description": "my first application exposed by Luminate",
                  "type": "SSH",
                  "icon": null,
                  "isVisible": true,
                  "isNotificationEnabled": true,
                  "connectionSettings": {
                      "internalAddress": "tcp://127.0.0.1:22",
                      "internalSSLCertificatePublicHalf": null,
                      "externalAddress": "luminate-api-app.company.luminatesite.com",
                      "customExternalAddress": null,
                      "luminateAddress": "luminate-api-app.company.luminatesite.com",
                      "customSSLCertificate": null,
                      "authenticationType": "None",
                      "ssoSettings": {},
                      "customRootPath": null
                  },
                  "linkTranslationSettings": {
                      "baseUrl": null,
                      "isDefaultContentRewriteRulesEnabled": true,
                      "isDefaultHeaderRewriteRulesEnabled": true,
                      "linkedApplications": null,
                      "defaultRewriteRules": null,
                      "customRewriteRules": null
                  },
                  "sshSettings": {
                      "userAccounts": [
                          {
                              "id": "871ed8f0-b9e3-4ad8-afef-76bd4806d1a8",
                              "name": "root"
                          },
                          {
                              "id": "28a18a2d-57b6-40eb-8ee2-069f6ea49b58",
                              "name": "lisa"
                          }
                      ]
                  },
                  "requestCustomizationSettings": {
                      "headerCustomization": {}
                  }
              }
          schema:
            $ref: '#/definitions/ApplicationRequestDto'
          required: true
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            $ref: '#/definitions/ApplicationDto'
          headers:
            x-lum-request-id:
              type: string
              description: The request ID of this request.
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      tags:
        - Applications
      summary: Delete Application
      description: Deletes permanently an application.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: application_id
          in: path
          description: The application ID
          required: true
          type: string
      responses:
        204:
          description: Application was deleted successfully
          headers:
            x-lum-request-id:
              type: string
              description: The request ID of this request.
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /applications/{application_id}/directory-entity-bindings/:
    get:
      tags:
        - Applications
      summary: List Directory Entities Assigned to Application
      description: |
        Enumerates all assigned directory entities for an application.
        
      operationId: findDirectoryEntityBindingsUsingGET
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: application_id
          in: path
          description: The application ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DirectoryEntityBindingDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - Applications
      summary: Assign Directory Entity to Application
      description: | 
                    Assigns a directory entity to an application.
                    
                    This call assigns a directory entity (user, group or api client) 
                    with a security role to an application.
                    
                    A security role reference an existing custom ssh user account in the application and optional parameters
      operationId: createOrUpdateDirectoryEntityBindingUsingPUT
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: application_id
          in: path
          description: application-id
          required: true
          type: string
        - in: body
          name: directoryEntityDto
          description: |
              {
               "directoryEntity":{
                  "type":"User",
                  "identityProviderType":"local",
                  "identifierInProvider":"auth0|5b3bc3bb4b506079caf1a8a5",
                  "identityProviderId":"local"
               },
               "securityRole":{
                  "sshUserAccountStrategy":"Specific",
                  "customSshUserAccounts":[]
               }
              }
          required: true
          schema:
            $ref: '#/definitions/DirectoryEntityBindingDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DirectoryEntityBindingDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  
  /applications/{application_id}/directory-entity-bindings/byIdentifierInProvider:
    delete:
      tags:
        - Applications
      summary: Remove Directory Entity Assignment to an Application
      description: |
        Remove the directory entity assigned to an application by its identifier
      operationId: removeDirectoryEntityBindingByIdentifierInProviderUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: application_id
          in: path
          description: application-id
          required: true
          type: string
        - in: body
          name: identifierInProviderDto
          description: 'the identifier-in-provider '
          required: true
          schema:
            $ref: '#/definitions/IdentifierInProviderDto'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          

            
#####################################
#         Identities Paths        #
#####################################          
  /identities/local/users/:
    get:
      tags:
        - Identities
      summary: List Local Users
      description: |
          Enumerates users from the local users repository in your Luminate tenant with pagination in most cases

          A subset of users can be returned that match a supported filter expression or search criteria.
      parameters:
      - $ref: '#/parameters/AuthHeader'
      - $ref: '#/parameters/PageSizeHeader'
      - $ref: '#/parameters/Email'
      - $ref: '#/parameters/Filter'
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/PaginatedUserResult'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
    post:
      tags:
        - Identities
      summary: Create Local User
      description: |
        Creates a new user in the local users repository in your Luminate tenant.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: user
          in: body
          description: The User JSON to update/insert
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: User was created successfully
          schema:
            $ref: '#/definitions/User'
  /identities/local/users/{user_id}:
    get:
      tags:
        - Identities
      summary: Get Local User
      description: |
          Get  userâ€™s profile from the local users repository in your Luminate tenant.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: user_id
          in: path
          description: The User ID
          required: true
          type: string
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError' 
    put:
      tags:
        - Identities
      summary: Update Local User
      description: |
          Updates a userâ€™s profile in the local users repository in your Luminate tenant.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: user_id
          in: path
          description: The User ID
          required: true
          type: string
        - in: "body"
          name: "body"
          description: "User object that needs to be updated"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError' 
    delete:
      tags:
        - Identities
      summary: Delete Local User
      description: |
          Deletes an user permanently from the local users repository in your Luminat tenant.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: user_id
          in: path
          description: The User ID
          required: true
          type: string  
      responses:
        200:
          description: successful operation
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError' 

  /identities/settings/blocked-users:
    get:
      tags:
        - Identities
      summary: List Blocked Users
      description: |
          Lists of blocked users in your Luminate tenant.
      parameters:
        - $ref: '#/parameters/AuthHeader'
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - Identities
      summary: Block User
      description: 
          Block user
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: user
          in: body
          description: |
            {
              "identity_provider_id": "local",
              "user_id": "dolore sint"
            }
          schema:
            $ref: '#/definitions/BlockUserDto'
          required: true
        
      responses:
        201:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/BlockUserDto'
    delete:
      tags:
        - Identities
      summary: Unblock User
      description: 
          Unblock user
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: user
          in: body
          description: |
           {
              "identity_provider_id": "local",
              "user_id": "auth0|5b3e46d2f58025488ee4446e"
            }
          schema:
            $ref: '#/definitions/BlockUserDto'
          required: true
      responses:
        204:
          description: Resource retrieved successfully

  /identities/local/groups/:
    get:
      tags:
        - Identities
      summary: List Local Groups
      description: |
          Lists local groups in your Lumninate tenant with pagination in most cases

          A subset of users can be returned that match a supported filter expression or search criteria.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - $ref: '#/parameters/QueryFilterHeader'
        - $ref: '#/parameters/PageSizeHeader'
      responses:
        200:
          description: "A list of groups"
          schema:
            $ref: "#/definitions/PaginatedGroupResult"
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
    post:
      tags:
        - Identities
      summary: Create Local Group
      description: |
                Creates a new local group resource with a unique ID in your Luminate tenant.
                The new resource will be returned in the response
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: group
          in: body
          description: |
            {
              "name": "my group name",
              "repository_type": "local",
              "identity_provider_id": "local"
            }
          schema:
            $ref: '#/definitions/Group'
          required: true
      responses:
        201:
          description: Group was created successfully
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Group not found
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
            
  /identities/local/groups/{group_id}:
    get:
      tags:
        - Identities
      summary: Get Local Group
      description: |
          Get  groupâ€™s details
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: group_id
          in: path
          description: The User ID
          required: true
          type: string  
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError' 
    put:
      tags:
        - Identities
      summary: Update Local Group
      description: |
          Updates a group details
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: group_id
          in: path
          description: The Group ID
          required: true
          type: string  
        - name: group
          in: body
          description: |
              {
                "name": "apiGroup",
                "repository_type": "local",
                "identity_provider_id": "local"  
              }
          schema:
            $ref: '#/definitions/Group'
          required: true
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError' 
    delete:
      tags:
        - Identities
      summary: Delete Local Group
      description: |
          Deletes a group permanently
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: group_id
          in: path
          description: The User ID
          required: true
          type: string    
      responses:
        200:
          description: Resource retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Site'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError' 
#####################################
#         Sessions Paths            #
#####################################    
  /sessions/destroy:
    post:
      tags:
        - 'Sessions'
      summary: Destroy all the active sessions for the given user.
      description: |
                The sessions destroy endpoint allows to delete all active sessions for the given user.

      parameters:
      - $ref: '#/parameters/AuthHeader'
      - in: "body"
        name: "body"
        description: "User details"
        required: true
        schema:
          $ref: "#/definitions/destroyUserSessionsData"
      responses:
        204:
          description: OK
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
#####################################
#         Logs Paths                #
#####################################    
#####################################
#         Audit logs Paths          #
#####################################
  /logs/audit:
    post:
      tags:
        - 'Logs'
      summary: Get all Audit logs matching the given filter
      description: |
                The audit-logs endpoint allows retreiving all logs matching a given filter.

                Filtering can be done using a time-frame and free-text searching.
                
                TimeFrame is limited to 30 days.

                Results are always sorted by date in ascending order.

                Paging may be implemented by running a query and noting the ID and time of the
                last log in the page. When querying for the next page simply provide in the
                request the search_after field with the date and ID of the last log in the previous
                page and call the request again.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: AuditLogRequest
          in: body
          description: The query filter for fetching the logs
          schema:
            $ref: '#/definitions/AuditLogRequest'
          required: true
      responses:
        200:
          description: Audit-logs retrieved successfully - empty array if none found.
          schema:
            $ref: '#/definitions/AuditLogSearchResults'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'

  /logs/audit/metadata:
    get:
      tags:
        - 'Logs'
      summary: Get field types of audit-logs
      description: |
                Returns all the known fields and their type.
      parameters:
        - $ref: '#/parameters/AuthHeader'
      responses:
        200:
          description: Metadata retreived successfully - fields may be nested.
          schema:
            $ref: '#/definitions/MetadataResults'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
#####################################
#         Access logs Paths         #
#####################################
  /logs/access:
    parameters:
     - $ref: '#/parameters/AuthHeader'
    post:
      tags:
        - 'Logs'
      summary: Get all Access logs matching the given filter
      description: |
                The access-logs endpoint allows retreiving all logs matching a given filter.

                Filtering can be done using a time-frame and free-text searching.
                
                TimeFrame is limited to 7 days.

                Results are always sorted by date in ascending order.

                Paging may be implemented by running a query and noting the ID and time of the
                last log in the page. When querying for the next page simply provide in the
                request the search_after field with the date and ID of the last log in the previous
                page and call the request again.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: AccessLogRequest
          in: body
          description: The query filter for fetching the logs
          schema:
            $ref: '#/definitions/AccessLogRequest'
          required: true
      responses:
        200:
          description: Access-logs retrieved successfully - empty array if none found.
          schema:
            $ref: '#/definitions/AccessLogSearchResults'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'

  /logs/access/metadata:
    get:
      tags:
        - 'Logs'
      summary: Get field types of access-logs
      description: |
                Returns all the known fields and their type.
      parameters:
        - $ref: '#/parameters/AuthHeader'
      responses:
        200:
          description: Metadata retreived successfully - fields may be nested.
          schema:
            $ref: '#/definitions/MetadataResults'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
#####################################
#           SSH logs Paths          #
#####################################
  /logs/ssh:
    post:
      tags:
        - 'Logs'
      summary: Get all SSH logs matching the given filter
      description: |
                The SSH-logs endpoint allows retreiving all logs matching a given filter.

                Filtering can be done using a time-frame and free-text searching.
                
                TimeFrame is limited to 7 days.

                Results are always sorted by date in ascending order.

                Paging may be implemented by running a query and noting the ID and time of the
                last log in the page. When querying for the next page simply provide in the
                request the search_after field with the date and ID of the last log in the previous
                page and call the request again.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: SSHLogRequest
          in: body
          description: The query filter for fetching the logs
          schema:
            $ref: '#/definitions/SSHLogRequest'
          required: true
      responses:
        200:
          description: SSH-logs retrieved successfully - empty array if none found.
          schema:
            $ref: '#/definitions/SSHLogSearchResults'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'

  /logs/ssh/metadata:
    get:
      tags:
        - 'Logs'
      summary: Get field types of SSH-logs
      description: |
                Returns all the known fields and their type.
      parameters:
        - $ref: '#/parameters/AuthHeader'
      responses:
        200:
          description: Metadata retreived successfully - fields may be nested.
          schema:
            $ref: '#/definitions/MetadataResults'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'
#####################################
#           RDP logs Paths          #
#####################################
  /logs/rdp:
    post:
      tags:
        - 'Logs'
      summary: Get all RDP logs matching the given filter
      description: |
                The RDP-logs endpoint allows retreiving all logs matching a given filter.

                Filtering can be done using a time-frame and free-text searching.
                
                TimeFrame is limited to 7 days.

                Results are always sorted by date in ascending order.

                Paging may be implemented by running a query and noting the ID and time of the
                last log in the page. When querying for the next page simply provide in the
                request the search_after field with the date and ID of the last log in the previous
                page and call the request again.
      parameters:
        - $ref: '#/parameters/AuthHeader'
        - name: RDPLogRequest
          in: body
          description: The query filter for fetching the logs
          schema:
            $ref: '#/definitions/RDPLogRequest'
          required: true
      responses:
        200:
          description: RDP-logs retrieved successfully - empty array if none found.
          schema:
            $ref: '#/definitions/RDPLogSearchResults'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'

  /logs/rdp/metadata:
    get:
      tags:
        - 'Logs'
      summary: Get field types of RDP-logs
      description: |
                Returns all the known fields and their type.
      parameters:
        - $ref: '#/parameters/AuthHeader'
      responses:
        200:
          description: Metadata retreived successfully - fields may be nested.
          schema:
            $ref: '#/definitions/MetadataResults'
        400:
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: Internal service error
          schema:
            $ref: '#/definitions/InternalError'

################################################################################
#                       Common Response codes                                  #
################################################################################
responses:
  500:
    description: Internal service error
    examples: {sdsds}
    schema:
      $ref: '#/definitions/ErrorResponse'
    headers:
      x-lum-request-id:
        type: string
        description: The request ID of this request.
  404:
    description: Resource not found
    headers:
      x-lum-request-id:
        type: string
        description: The request ID of this request.
  429:
    description: Rate limit exceeded.
    headers:
      x-lum-request-id:
        type: string
        description: The request ID of this request.
################################################################################
#                                 Definitions                                  #
################################################################################
securityDefinitions:
  OAuth:
    type: "oauth2"
    description: |
      Luminate Security uses OAuth 2.0 for Authorization.

      (For additional information review the Authorization section in this API reference.)
    tokenUrl: "/v1/oauth/token"
    flow: "application"

definitions:
  PaginatedResult:
    type: object
    properties:
      last:
        type: boolean
        description: "Is this the last page"
        example: false
      first:
        type: boolean
        description: "Is this the first page"
        example: true
      perPage:
        type: integer
        description: "Number of items per page"
        example: 25
      sort:
        type: array
        items:
          type: object
        description: "Sorted field"
        example:
          - email: desc
      nextPage:
        type: string
        description: |
          This is the next page offset indicator, it should be passed in the `pageOffset` query parameter
          when requesting the next page. This can be a number, a hash or whatever
        example: "2"
## The application resource ##
  ApplicationCreationRequest:
    type: object
    required:
      - name
      - description
      - type
      - connection_settings
    example: |
      {
      "name":"luminate application 1",
      "description":"my first application exposed by Luminate",
      "type":"SSH",
      "connectionSettings":{
        "authenticationType":"None",
        "internalAddress":"tcp://127.0.0.1:22",
        "externalAddress":null,
        "customRootPath":null
      },
      "linkTranslationSettings":{
        "baseUrl":null
      },
      "sshSettings":{
        "userAccounts":[
           {
              "name":"root"
            },
            {
              "name":"lisa"
            }
          ]
      },
        "isVisible":true
      }
    properties:
      name:
        type: string
        description: The name of the application.
      description:
        type: string
        description: A more verbose description for the application.
      type:
        type: string
        description: Tha application type - Valid values are HTTP, SSH.
      connection_settings:
        type: object
        properties:
          internal_address:
            type: string
            description: |
              The internal address by which the application will be reachable.

              For applications of type `HTTP`, the URI scheme must be 'http' or 'https'.
              For example, 'https://172.20.0.1:8080'.

              For applications of type `SSH`, the URI scheme must be 'tcp'.
              For example, 'tcp://172.20.0.5:22'.
      ssh_users:
        type: array
        items:
          type: string
          description: Specifies a list of user names that are available for SSH log-in on the remote machine (cannot be empty for SSH applications).
            For example, "root" or "lisa".
  ApplicationConnectionSettingsDto:
    type: object
    required:
      - internalAddress
    properties:
      authenticationType:
        type: string
        description: 'authentication type (None, Kerberos,HS512,RS512)'
        enum:
          - None
          - Kerberos
          - HS512
          - RS512
      customExternalAddress:
        type: string
        description: the application custom DNS address to expose (instead of the automatically generated externalAddress).
      customRootPath:
        type: string
        description: the application custom root path to redirect automatically to when accessing to the root - /.
      customSSLCertificate:
        type: string
        format: byte
        description: the application custom SSL certificate (default based on application name).
      externalAddress:
        type: string
        description: the application DNS address to expose (generated automatically based on application name and tenant name).
      internalAddress:
        type: string
        description: the application internal address in the internal network.
      internalSSLCertificatePublicHalf:
        type: string
        format: byte
        description: the public-half of the internal application SSL certificate (in order to force the connector to perform SSL pinning).
      ssoSettings:
        description: 'SSO settings '
        $ref: '#/definitions/ApplicationSsoSettingsDto'
  ApplicationRequestDto:
    type: object
    required:
      - name
      - type
    properties:
      connectionSettings:
        $ref: '#/definitions/ApplicationConnectionSettingsDto'
      description:
        type: string
        description: application description
      icon:
        type: string
        format: byte
        description:  base64 representation of the icon file (40x40)
      isNotificationEnabled:
        type: boolean
        example: false
        description: whether to enabled/disable notifications for this application
      isVisible:
        type: boolean
        example: false
        description: whether to show/hide this application in the user-portal
      linkTranslationSettings:
        $ref: '#/definitions/ApplicationLinkTranslationSettingsDto'
      modifiedOn:
        type: string
        format: date-time
        description: The entity modification date
      name:
        type: string
        description: application name
      requestCustomizationSettings:
        $ref: '#/definitions/ApplicationRequestCustomizationSettingsDto'
      sshSettings:
        $ref: '#/definitions/ApplicationSshSettingsDto'
      tenantIdentifier:
        type: string
      type:
        type: string
        description: 'application type (HTTP, SSH, RDP, VNC)'
        enum:
          - HTTP
          - SSH
          - RDP
          - VNC
  ApplicationDto:
    type: object
    required:
      - name
      - type
    properties:
      connectionSettings:
        $ref: '#/definitions/ApplicationConnectionSettingsDto'
      createdOn:
        type: string
        format: date-time
        description: The entity creation date
      description:
        type: string
        description: application description
      health:
        description: the application-health status
        $ref: '#/definitions/ApplicationHealthDto'
      icon:
        type: string
        format: byte
        description: base64 representation of the icon file (40x40)
      id:
        type: string
        description: The identifier of this entity (optional for create only)
      isNotificationEnabled:
        type: boolean
        example: false
        description: whether to enabled/disable notifications for this application
      isVisible:
        type: boolean
        example: false
        description: whether to show/hide this application in the user-portal
      linkTranslationSettings:
        $ref: '#/definitions/ApplicationLinkTranslationSettingsDto'
      modifiedOn:
        type: string
        format: date-time
        description: The entity modification date
      name:
        type: string
        description: application name
      requestCustomizationSettings:
        $ref: '#/definitions/ApplicationRequestCustomizationSettingsDto'
      sshSettings:
        $ref: '#/definitions/ApplicationSshSettingsDto'
      tenantIdentifier:
        type: string
      type:
        type: string
        description: 'application type (HTTP, SSH, RDP, VNC)'
        enum:
          - HTTP
          - SSH
          - RDP
          - VNC
  ApplicationHealthDto:
    type: object
    required:
      - applicationId
      - status
    properties:
      applicationId:
        type: string
        description: The application-id.
      connectorsStatus:
        type: array
        description: The connectors status.
        items:
          $ref: '#/definitions/ConnectorStatusEntryDto'
      lastAvailableOn:
        type: string
        format: date-time
        description: The last date the application was available.
      lastUpdatedOn:
        type: string
        format: date-time
        description: The last application-health modification date
      status:
        type: string
        description: The application-health status.
        enum:
          - Available
          - Unavailable
          - Pending
          - PartiallyAvailable
      totalNumberOfAvailableConnectors:
        type: integer
        format: int32
        description: The total number of available connectors.
      totalNumberOfConnectors:
        type: integer
        format: int32
        description: The total number of connectors currently exposing this application.
  ApplicationHealthInfoDto:
    type: object
    required:
      - applicationId
      - status
    properties:
      applicationId:
        type: string
        description: The application-id.
      lastAvailableOn:
        type: string
        format: date-time
        description: The last date the application was available.
      lastUpdatedOn:
        type: string
        format: date-time
        description: The last application-health modification date
      status:
        type: string
        description: The application-health status.
        enum:
          - Available
          - Unavailable
          - Pending
          - PartiallyAvailable
  ApplicationInfoDto:
    type: object
    required:
      - description
      - id
      - name
      - type
      - url
    properties:
      description:
        type: string
        description: The application description.
      icon:
        type: string
        format: byte
        description: base64 representation of the icon file (40x40)
      id:
        type: string
        description: The application identifier.
      name:
        type: string
        description: The application name.
      type:
        type: string
        description: 'application type (HTTP, SSH, RDP, VNC)'
        enum:
          - HTTP
          - SSH
          - RDP
          - VNC
      url:
        type: string
        description: The application URL (external address).
  ApplicationLinkTranslationSettingsDto:
    type: object
    properties:
      baseUrl:
        type: string
        description: the application base-url (how your users access the application).
      customRewriteRules:
        $ref: '#/definitions/LinkTranslationRewriteRulesDto'
      defaultRewriteRules:
        $ref: '#/definitions/LinkTranslationRewriteRulesDto'
      isDefaultContentRewriteRulesEnabled:
        type: boolean
        example: false
        description: Is Default Content Rewrite-Rules Enabled
      isDefaultHeaderRewriteRulesEnabled:
        type: boolean
        example: false
        description: Is Default Header Rewrite-Rules Enabled
      linkedApplications:
        type: array
        description: Linked applications
        items:
          type: string
  ApplicationRequestCustomizationSettingsDto:
    type: object
    properties:
      headerCustomization:
        type: object
        description: the header-customization values.
        additionalProperties:
          type: string
  ApplicationSshSettingsDto:
    type: object
    properties:
      userAccounts:
        type: array
        description: the ssh-application custom user-accounts.
        items:
          $ref: '#/definitions/SshUserAccountDto'
  ApplicationSsoSettingsDto:
    type: object
    properties:
      header:
        type: string
        description: sso header
      private:
        type: string
        format: byte
        description: the private key JWT RS512  /.
      public:
        type: string
        format: byte
        description: the public key for JWT RS512 /.
      secret:
        type: string
        description: the secret for JWT HS512  /.
  ApplicationWithDirectoryEntityBindingsDto:
    type: object
    required:
      - bindings
    properties:
      application:
        $ref: '#/definitions/ApplicationDto'
      bindings:
        type: array
        description: The directory-entity-bindings to create/update.
        items:
          $ref: '#/definitions/DirectoryEntityBindingDto'
  ApplicationWithEffectiveSecurityRoleBindingDto:
    type: object
    properties:
      application:
        $ref: '#/definitions/ApplicationInfoDto'
      effectiveSecurityRole:
        $ref: '#/definitions/SecurityRoleDto'
      health:
        description: the application-health status
        $ref: '#/definitions/ApplicationHealthInfoDto'
  AuthorizationPolicy:
    type: object
    properties:
      authorizationRules:
        type: array
        items:
          $ref: '#/definitions/AuthorizationRule'
  AuthorizationRule:
    type: object
    properties:
      action:
        type: string
      effect:
        type: string
        enum:
          - Allow
          - Deny
      resource:
        type: string
  ConnectorStatusEntryDto:
    type: object
    properties:
      connectorId:
        type: string
      isHealthy:
        type: boolean
  DirectoryEntityBindingDto:
    type: object
    properties:
      directoryEntity:
        $ref: '#/definitions/DirectoryEntityDto'
      securityRole:
        $ref: '#/definitions/SecurityRoleDto'
  DirectoryEntityDto:
    type: object
    required:
      - id
      - identifierInProvider
      - identityProviderId
      - identityProviderType
      - type
    properties:
      displayName:
        type: string
        description: The display-name of this directory entity (optional).
      id:
        type: string
        description: The identifier of this directory entity.
      identifierInProvider:
        type: string
        description: The identifier of this entity in the identity provider owning this directory entity.
      identityProviderId:
        type: string
        description: The identity provider owning this directory entity.
      identityProviderType:
        type: string
        description: The identity provider owning this directory entity (Local/ActiveDirectory/Okta).
        default: "local"      
      type:
        type: string
        description: The directory entity type (User/Group/OU).
        enum:
          - User
          - Group
          - OU
          - ApiClient
  DirectoryEntityMembershipsDto:
    type: object
    required:
      - directoryEntitiesMemberships
    properties:
      directoryEntitiesMemberships:
        type: array
        description: set of directory entities memberships (group/OU memberships)
        items:
          type: string
      identityProviderId:
        type: string
        description: the identity provider identifier
  GlobalConfigurationDto:
    type: object
    properties:
      domainName:
        type: string
        description: The current tenant's domain-name
      ssh_ca_public_key:
        type: string
        description: The current tenant's ssh ca public key
      tenantIdentifier:
        type: string
        description: The current tenant-identifier
  IdentifierInProviderDto:
    type: object
    required:
      - identifierInProvider
      - identityProviderId
      - identityProviderType
    properties:
      identifierInProvider:
        type: string
        description: The identifier of this entity in the identity provider owning this directory entity.
      identityProviderId:
        type: string
        description: The 'local' identity provider.
      identityProviderType:
        type: string
        description: The 'local' identity provider.
  JsonNode:
    type: object
    properties:
      array:
        type: boolean
      bigDecimal:
        type: boolean
      bigInteger:
        type: boolean
      binary:
        type: boolean
      boolean:
        type: boolean
      containerNode:
        type: boolean
      double:
        type: boolean
      float:
        type: boolean
      floatingPointNumber:
        type: boolean
      int:
        type: boolean
      integralNumber:
        type: boolean
      long:
        type: boolean
      missingNode:
        type: boolean
      nodeType:
        type: string
        enum:
          - ARRAY
          - BINARY
          - BOOLEAN
          - MISSING
          - 'NULL'
          - NUMBER
          - OBJECT
          - POJO
          - STRING
      'null':
        type: boolean
      number:
        type: boolean
      object:
        type: boolean
      pojo:
        type: boolean
      short:
        type: boolean
      textual:
        type: boolean
      valueNode:
        type: boolean
  LinkTranslationContentRewriteRuleDto:
    type: object
    required:
      - httpMessageType
      - pattern
      - rewriteValue
    properties:
      contentType:
        type: string
        description: The specific content-type to apply this rule on
      httpMessageType:
        type: string
        description: The HTTP message type (HttpRequest/HttpResponse).
        enum:
          - HttpRequest
          - HttpResponse
      id:
        type: string
        description: The identifier of this entity (optional for create only)
      pattern:
        type: string
        description: The matcher pattern (regular-expression)
      rewriteRuleType:
        type: string
        description: The type of this rewrite-rule (Direct/Implied)
        enum:
          - Direct
          - Implied
      rewriteValue:
        type: string
        description: The required rewrite value
      uri:
        type: string
        description: The specific URI to apply this rule on
  LinkTranslationHeaderRewriteRuleDto:
    type: object
    required:
      - headerName
      - httpMessageType
      - pattern
      - rewriteValue
    properties:
      headerName:
        type: string
        description: The HTTP Header-Name to replace
      httpMessageType:
        type: string
        description: The HTTP message type (HttpRequest/HttpResponse).
        enum:
          - HttpRequest
          - HttpResponse
      id:
        type: string
        description: The identifier of this entity (optional for create only)
      pattern:
        type: string
        description: The pattern to replace
      rewriteValue:
        type: string
        description: The required value
  LinkTranslationRewriteRulesDto:
    type: object
    properties:
      contentRules:
        type: array
        description: The link-translation content rewrite-rules
        items:
          $ref: '#/definitions/LinkTranslationContentRewriteRuleDto'
      headerRules:
        type: array
        description: The link-translation headers rewrite-rules
        items:
          $ref: '#/definitions/LinkTranslationHeaderRewriteRuleDto'
  Page:
    type: object
    properties:
      content:
        type: array
        items:
          type: object
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
  PageÂ«ApplicationDtoÂ»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ApplicationDto'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
  SecurityRoleDto:
    type: object
    required:
      - sshUserAccountStrategy
    properties:
      customSshUserAccounts:
        type: array
        description: The custom allowed SSH-User-Accounts.
        items:
          $ref: '#/definitions/SshUserAccountDto'
      id:
        type: string
        description: The identifier of this security profile.
      isSshKeyAuthenticationMethodEnabled:
        type: boolean
        example: false
        description: Enable/Disable SSH-Key Authentication Method.
      isTransparentAgentForwardingEnabled:
        type: boolean
        example: false
        description: Enable/Disable Transparent SSH agent forwarding.
      sshUserAccountStrategy:
        type: string
        description: The strategy to allow specific SSH-User-Account (Specific), or also with the user's username (SpecificAndAutomaticUsername)
        enum:
          - Specific
          - SpecificAndAutomaticUsername
  SiteBindingDto:
    type: object
    required:
      - sites
    properties:
      sites:
        type: array
        description: set of sites binding
        items:
          type: string
  Sort:
    type: object
  SshUserAccountDto:
    type: object
    properties:
      id:
        type: string
        description: The ssh-user-account identifier
      name:
        type: string
        description: The ssh-user-account name
  Connector:
    type: object
    properties:
      id:
        type: string
        example: "1e1513c8-3801-4e58-bba3-e2466bd3fbb4"
      name:
        type: string
        example: "Connector A"
      version:
        type: string
        example: "1.0"
      registered:
        type: boolean
        example: true
      otp:
        type: string
        example: "1234567890123456"
      date_created:
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"
      date_registered:
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"
      date_otp_expire:
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"
      send_logs:
        type: boolean
        example: false
      connector_status:
        type: string
        enum: [StatusUndefined,StatusReady,StatusDownloadStarted,StatusDownloadCompleted,StatusMigrationStarted,StatusMigrationCompleted,StatusExecuteStarted,StatusExecuteCompleted,StatusRetired,StatusFailed,]
        example: "StatusUndefined"
      update_mode:
        type: string
        enum: [auto,inherit,manual]
        example: "auto"
      update_status:
        type: string
        enum: [UpToDate,UpdateAvailable,UpdateStarted,UpdateCompleted,UpdateFailed]
        example: "UpToDate"
      update_status_info:
        type: string
        example: "error downloading new connector"
  ConnectorPostRequest:
      type: object
      properties:
        name:
          type: string
          example: "Connector A"
        version:
          type: string
          example: "1.0"
  RegisteredConnector:
    type: object
    properties:
      id:
        type: string
        example: "1e1513c8-3801-4e58-bba3-e2466bd3fbb4"
      name:
        type: string
        example: "Connector A"
      version:
        type: string
        example: "1.0"
      registered:
        type: boolean
        example: true
      otp:
        type: string
        example: "1234567890123456"
      date_created:
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"
      date_registered:
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"
      date_otp_expire:
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"
      send_logs:
        type: boolean
        example: false
      registrationInformationPackage:
        properties:
          roleId:
            type: string
          secretId:
            type: string
  ConnectorLastSeen:
    type: object
    properties:
      id:
        type: string
        example: "1e1513c8-3801-4e58-bba3-e2466bd3fbb4"
      lastSeen:
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"
  ConnectorPolicy:
    type: object
    properties:
      sendLogs:
        type: boolean
      applicationPolicy:
        type: array
        items:
          $ref: '#/definitions/ConnectorApplication'
      connectorSettings:
          $ref: '#/definitions/ConnectorSettings'
  ConnectorApplication:
    properties:
      id:
        type: string
        example: "1e1513c8-3801-4e58-bba3-e2466bd3fbb4"
      name:
        type: string
        example: "mycomp-jira.ddns.net"
      url:
        type: string
        example: "http://localhost:8088/"
  ConnectorSettings:
    type: object
    properties:
      proxyAddress:
        type: string
        example: "192.168.1.10"
      proxyPort:
        type: integer
        example: 8080
      proxyUsername:
        type: string
        example: "proxy_user"
      proxyPassword:
        type: string
        example: "*****"
## The application resource ##
  Application:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      url:
        type: string
      sites:
        type: array
        items:
          type: string
## The BlockUser resource ##
  BlockUserDto:
      type: object
      properties:
        identity_provider_id:
          type: string
          description: "Identity Provider ID of the user"
          default: "local"
        user_id:
          type: string  
          description: "User ID in the Idendity Provider"
## The User resource ##
  PaginatedUserResult:
    type: object
    allOf:
      - $ref: "#/definitions/PaginatedResult"
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: "#/definitions/User"
  User:
    type: object
    properties:
        id:
          type: string
          description: User's unique identifier
          example: aaaa-bbbb-cccc
          readOnly: true
        first_name:
          type: string
          description: First name
        last_name:
          type: string
          description: Last name
        display_name:
          type: string
          description: Display Name
        upn:
          type: string
          description: User pricipal name
          example: user
        username:
          type: ["string", "null"]
          example: user
        email:
          type: string
          example: user@accezz.io
        created_at:
          type: string
          format: dateTime
          description: The date when the user was created
        updated_at:
          type: string
          format: dateTime
          description: The date when the user was last updated (modified)
        last_ip:
          type: string
          description: The last login IP address
        last_login:
          type: string
          format: dateTime
          description: The last login date for this user
        logins_count:
          type: integer
          description: The number of logins for this user
        blocked:
          type: boolean
          description: Indicates whether the user is blocked or not
        create_as_admin:
          type: boolean
          description: Create the user as an admin, defaults to false
        identity_provider_id:
          type: string
        repository_type:
          type: string
        sendEmail:
          type: boolean
          description: Indicates whether it should send email to the user or not.
        upn_forward_for_sso_enabled:
          type: boolean
          description: Is kerberos sso enabled for this user
        useGivenPassword:
          type: boolean
          description: Indicates whether it should create a user with given password, must be used with givenPassword. Note that using this feature will not send an invite mail.
        givenPassword:
          type: string
          example: StrongPassword1!
          description: The password to create the user with, , must be used with useGivenPassword.
        is_admin:
          type: boolean
          readOnly: true
          description: Is the user an admin
        notification_email:
          type: ["string", "null"]
          description: The email to use to send email notifications to user. 
## The Group resource ##
  PaginatedGroupResult:
    type: object
    allOf:
      - $ref: "#/definitions/PaginatedResult"
      - type: object
        properties:
          content:
            type: array
            items:
              $ref: "#/definitions/Group"
  Group:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          description: "Group uuid"
          example: "d8028639-a76a-4614-965a-7e3d4832d94b"
          readOnly: true
        name:
          type: string
          description: "Group name"
          example: "Administrators"
        created_at:
          type: string
          format: dateTime
        updated_at:
          type: string
          format: dateTime
  
  GroupRequest:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          description: "Group uuid"
          example: "d8028639-a76a-4614-965a-7e3d4832d94b"
          readOnly: true
        name:
          type: string
          description: "Group name"
          example: "Administrators"
## The Site resource ##
  Site:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        settings:
          $ref: '#/definitions/SiteSettings'
        connectors:
          type: array
          items:
            type: string
        connector_objects:
          type: array
          items:
            $ref: '#/definitions/Connector'
        update_mode:
          type: string
          example: "inherit"
        site_status:
          $ref: '#/definitions/SiteStatusResponse'
        down_since:
          type: string
        mute_health_notification:
          type: boolean
  SiteSettings:
    type: object
    properties:
      proxyAddress:
        type: string
        example: "192.168.1.10"
      proxyPort:
        type: integer
        example: 8080
      proxyUsername:
        type: string
        example: "proxy_user"
      proxyPassword:
        type: string
        example: "****"
  SitePostBody:
    type: object
    properties:
      name:
        type: string
        example: "US East, Region A"
      description:
        type: string
      settings:
        $ref: '#/definitions/SiteSettings'
      connectors:
        type: array
        items:
          type: string
      mute_health_notification:
        type: boolean
        example: false
  SiteStatusResponse:
    type: object
    properties:
      ConnectorsUp:
        type: array
        items:
          $ref: '#/definitions/ConnectorStatus'
      ConnectorsDown:
        type: array
        items:
          $ref: '#/definitions/ConnectorStatus'
      ConnectorsNotConfigured:
        type: array
        items:
          $ref: '#/definitions/ConnectorStatus'
      Status:
        type: string
        example: "warning"
  ConnectorStatus:
    type: object
    properties:
      Id:
        type: string
        example: "654c5aee-f39f-4b44-a37f-5e59e58361f2"
      last_Seen:
        type: string
        example: "2017-12-10T16:19:35.896Z"
  RenewCertPostBody:
      type: object
      properties:
        roleId:
          type: string
          description: roleId that the connector belongs to (vault entity)
          example: "a357e262-369b-4031-ac8c-001adc96fca2"
        secretId:
          type: string
          description: secretId for this connector(vault entity)
          example: "855ccba9-6ed7-471d-84f5-8b9d60f76087"
  certificatePackage:
    properties:
      certificate:
        type: string
      issuingCa:
        type: string
      privateKey:
        type: string
      rootCa:
        type: string
  connectorRegistrationInformation:
      properties:
        connectorVersion:
          type: string
        containerVersion:
          type: string
  Version:
    type: object
    required:
      - version
      - url
      - checksum
      - signature
    properties:
      id:
        description: Version ID
        type: string
        readOnly: true
        example: '1e1513c8-3801-4e58-bba3-e2466bd3fbb4'
      version:
        description: Version identifier (semver syntax)
        type: string
        example: '0.0.1'
      url:
        description: URL from which you can download the package
        type: string
        example: 'https://get.luminatesec.com/updates/0.0.1.tgz'
      checksum:
        description: sha256 checksum of the binary file
        type: string
      signature:
        description: base64 of encrypted the binary's sha256, with private key.
        type: string
  SettingGet:
    type: object
    required:
      - update_mode
    properties:
      update_mode:
        description: UpdateMode [auto,manual,inherit]
        type: string
        example: 'auto'
      version:
        $ref: '#/definitions/Version'
  SettingPut:
    type: object
    required:
      - update_mode
    properties:
      update_mode:
        description: UpdateMode [auto,manual,inherit]
        type: string
        example: 'auto'
  ConnectorInstallationCommand:
    type: string
    example: 'docker run ...'

  GenCommandAdditionalConfig:
    type: object
    properties:
      connector_name:
        description: holds the name of the connector to insert to the command
        type: string
      kerberos_configuration:
        description: holds all the kerberos configuration for generating an installation command
        type: object
        properties:
          domain:
            description: domain name in active directory [hostname]
            type: string
            example: acme.example.com
          kdc_address:
            description: domain controller address [ip or hostname]
            type: string
            example: acme.example.com
          keytab_path:
            description: path to keytab file on the machine that runs the container
            type: string
            example: /opt/keytab

## Health Response ##
  HealthResponse:
    type: object
    properties:
      status:
        type: string
## Error Responses ##
  ValidationError:
    type: object
    properties:
      error:
        type: string
  InternalError:
    type: object
    properties:
      error:
        type: string

## Error Responses ##
  ErrorResponse:
    type: object
    required:
      - error_code
      - error_message
    example: {"error_code": "code", "error_message": "message"}
    properties:
      error_code:
        type: string
        description: An error code for the given error.
      error_message:
        type: string
        description: A human readable error message.
        
        
#############################################
#####  Sessions related definitions        ######
#############################################      
  destroyUserSessionsData:
    type: "object"
    required:
    - identity_provider_id
    - user_id
    properties:
      identity_provider_id:
        description: "Identity Provider ID"
        type: "string"
      user_id:
        description: "User ID"
        type: "string"
#############################################
#####  LOGS related definitions        ######
#############################################

## Common definitions for search ##
  SearchQuery:
    type: object
    required:
      - from_date
    properties:
      free_text:
        type: string
        description: 'This field accepts querys in a "Elasticsearch - Query String Syntax" - this is explained fully in the following link: https://www.elastic.co/guide/en/elasticsearch/reference/5.5/query-dsl-query-string-query.html#query-string-syntax'
        example: "John Doe"
      from_date:
        type: integer
        format: int64
        description: The epoch time from which to query (inclusive) in *milli-seconds*.
        example: 1533217020000
      to_date:
        type: integer
        format: int64
        description: The epoch time up to which to query (inclusive) in *milli-seconds* - if not specified then the current time is used.
        example: 15333034200000
      match_fields:
        description: An array of fields and values that will be added to the search, the values should be matched exactly
        type: array
        items:
          $ref: '#/definitions/FieldMatchObj'
  SearchAfter:
    type: array
    description: |
      Using search_after you may page through results.

      You will need to provide the search_after values of the *last* log line in the previous result.
    items:
     type: object
    example: [1533217020000, "log-type#7b105286-3dbb-01df-611d-76ef4a5668aa"]

  FieldMatchObj:
    type: object
    required:
      - field_name
      - field_value
    properties:
      field_name:
        type: string
        description: The field name to search
        example: "clientip"
      field_value:
        type: string
        description: The value to search in the given field_name, this should be an exact match to the field's value
        example: "213.12.11.10"

## The AuditLogRequest resource ##
  AuditLogRequest:
    type: object
    required:
      - query
    example: |
        {
        	"size" : 500,
        	"query": {
        		"free_text": "CREATE",
        		"from_date": 1533217020000
        	},
        	"search_after" : []
        }
    properties:
      size:
        type: integer
        description: The maximum number of results to return. This is limited to 1000, and defaults to 1000
        example: 500
      query:
        type: object
        $ref: '#/definitions/SearchQuery'
      search_after:
        type: object
        $ref: '#/definitions/SearchAfter'

  AuditLogSearchResults:
    type: object
    example: |
     {
        "Hits": 42,
        "Logs": [
            {
              "Id": "7b105286-3dbb-01df-611d-76ef4a5668aa",
              "Data": {
                "resourceId": "49570627966457796216771184834952136872218669149510565921"
                "eventType": "LOGIN"
                "sourceAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.86 Safari/537.36"
                "@timestamp": "2018-08-02T13:37:00.666Z"
                "targetService": "AUTH_SERVICE"
                "eventStatus": "SUCCEEDED"
                "@version": "1"
                "sourceHost": "213.12.11.10"
                "id": "d286478b-c0ec-4996-a807-c5413878db14"
                "user": "awsome_user@company.io"
                "resourceType": "Authentication"
              },
              "SearchAfterValues": [
                1533217020000,
                "luminate-audit#7b105286-3dbb-01df-611d-76ef4a5668aa"
               ]
            },
            ....
        ]
     }
    properties:
      Hits:
        type: integer
        description: Total number of logs found that match the query.
        example: 15
      Logs:
        type: array
        items:
          $ref: '#/definitions/AuditLogResult'
  AuditLogResult:
    type: object

    properties:
      Id:
        type: string
        description: The log ID
        example: "7b105286-3dbb-01df-611d-76ef4a5668aa"
      Data:
        type: object
        description: A JSON object of the log data fields and values
        example: |
            {
              "resourceId": "49570627966457796216771184834952136872218669149510565921"
              "eventType": "LOGIN"
              "sourceAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.86 Safari/537.36"
              "@timestamp": "2018-08-02T13:37:00.666Z"
              "targetService": "AUTH_SERVICE"
              "eventStatus": "SUCCEEDED"
              "@version": "1"
              "sourceHost": "213.12.11.10"
              "id": "d286478b-c0ec-4996-a807-c5413878db14"
              "user": "awsome_user@company.io"
              "resourceType": "Authentication"
            }
      SearchAfterValues:
        type: array
        items:
          type: object
        description: The values array to be used in search field search_after if paging is required.
        example: [1533217020000, "luminate-audit#7b105286-3dbb-01df-611d-76ef4a5668aa"]

## The AccessLogRequest resource ##
  AccessLogSearchResults:
    type: object
    example: |
     {
        "Hits": 42,
        "Logs": [
            {
              "Id": "7b105286-3dbb-01df-611d-76ef4a5668aa",
              "Data": {
                "request": "/rest/analytics/1.0/publish/bulk"
                "agent": "\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\""
                "geoip": {
                  "city_name": "Jerusalem",
                  "timezone": "Asia/Jerusalem",
                  "ip": "213.12.11.10",
                  "latitude": 33.4429,
                  "country_code2": "IL",
                  "country_name": "Israel",
                  "continent_code": "AS",
                  "country_code3": "IL",
                  "region_name": "Central District",
                  "location": [
                    37.8699,
                    33.4429
                  ],
                  "longitude": 37.8699,
                  "region_code": "M"
                }
                "verb": "POST"
                "referrer_params": "/secure/RapidBoard.jspa?rapidView=4&view=detail&selectedIssue=JIRA-1337&quickFilter=16"
                "referrer": "\"https://jira.id.mycomp.io/secure/RapidBoard.jspa?rapidView=4&view=detail&selectedIssue=JIRA-1337&quickFilter=16\""
                "@timestamp": "2018-08-02T13:37:00.666Z"
                "content_type": "application/json;charset=UTF-8"
                "bytes": 31
                "clientip": "213.12.11.10"
                "referrer_host": "jira.id.mycomp.io"
                "httpversion": "1.1"
                "response_time": 0.031
                "upstream_response_time": 0.031
                "user": "awsome_user@mycomp.io"
                "user_agent": {
                  "patch": "3029",
                  "os": "Windows 10",
                  "major": "58",
                  "minor": "0",
                  "name": "Chrome",
                  "os_name": "Windows 10",
                  "device": "Other"
                }
                "status": "200"
              },
              "SearchAfterValues": [
                1533217020000,
                "luminate-access#7b105286-3dbb-01df-611d-76ef4a5668aa"
               ]
            },
            ....
       ]
     }
    properties:
      Hits:
        type: integer
        description: Total number of logs found that match the query.
        example: 15
      Logs:
        type: array
        items:
          $ref: '#/definitions/AccessLogResult'
  AccessLogResult:
    type: object
    properties:
      Id:
        type: string
        description: The log ID
        example: "7b105286-3dbb-01df-611d-76ef4a5668aa"
      Data:
        type: object
        description: A JSON object of the log data fields and values
        example: |
            {
              "request": "/rest/analytics/1.0/publish/bulk"
              "agent": "\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\""
              "geoip": {
                "city_name": "Jerusalem",
                "timezone": "Asia/Jerusalem",
                "ip": "213.12.11.10",
                "latitude": 33.4429,
                "country_code2": "IL",
                "country_name": "Israel",
                "continent_code": "AS",
                "country_code3": "IL",
                "region_name": "Central District",
                "location": [
                  37.8699,
                  33.4429
                ],
                "longitude": 37.8699,
                "region_code": "M"
              }
              "verb": "POST"
              "referrer_params": "/secure/RapidBoard.jspa?rapidView=4&view=detail&selectedIssue=JIRA-1337&quickFilter=16"
              "referrer": "\"https://jira.id.mycomp.io/secure/RapidBoard.jspa?rapidView=4&view=detail&selectedIssue=JIRA-1337&quickFilter=16\""
              "@timestamp": "2018-08-02T13:37:00.666Z"
              "content_type": "application/json;charset=UTF-8"
              "bytes": 31
              "clientip": "213.12.11.10"
              "referrer_host": "jira.id.mycomp.io"
              "httpversion": "1.1"
              "response_time": 0.031
              "upstream_response_time": 0.031
              "user": "awsome_user@mycomp.io"
              "user_agent": {
                "patch": "3029",
                "os": "Windows 10",
                "major": "58",
                "minor": "0",
                "name": "Chrome",
                "os_name": "Windows 10",
                "device": "Other"
              }
              "status": "200"
            }
      SearchAfterValues:
        type: array
        items:
          type: object
        description: The values array to be used in search field search_after if paging is required.
        example: [1533217020000, "luminate-access#7b105286-3dbb-01df-611d-76ef4a5668aa"]

## The AccessLogRequest resource ##
  AccessLogRequest:
    type: object
    required:
      - query
    example: |
          {
          	"size" : 500,
          	"query": {
          		"free_text": "jira",
          		"from_date": 1533217020000
          	},
          	"search_after" : []
          }
    properties:
      size:
        type: integer
        description: The maximum number of results to return. This is limited to 1000, and defaults to 1000
        example: 500
      query:
        type: object
        $ref: '#/definitions/SearchQuery'
      search_after:
        type: object
        $ref: '#/definitions/SearchAfter'

## The SSHLogRequest resource ##
  SSHLogSearchResults:
    type: object
    example: |
     {
        "Hits": 42,
        "Logs": [
            {
              "Id": "7b105286-3dbb-01df-611d-76ef4a5668aa",
              "Data": {
                ip: "/213.12.11.10:15768"
                external-user: awsome_user@company.io
                command: docker ps
                action: COMMAND
                actionStatus: SUCCESS
                failureReason: null
                "@timestamp": '2018-08-02T13:37:00.666Z'
                application: sshapp.mycomp.luminatesite.com
                internal-user: ubuntu
                id: 7de1eb30-5b67-4e6b-92d1-541681492da7
                client_version: SSH-2.0-OpenSSH_6.8
              },
              "SearchAfterValues": [
                1533217020000,
                "luminate-ssh#7b105286-3dbb-01df-611d-76ef4a5668aa"
               ]
            },
            ....
        ]
     }
    properties:
      Hits:
        type: integer
        description: Total number of logs found that match the query.
        example: 15
      Logs:
        type: array
        items:
          $ref: '#/definitions/SSHLogResult'
  SSHLogResult:
    type: object
    properties:
      Id:
        type: string
        description: The log ID
        example: 7b105286-3dbb-01df-611d-76ef4a5668aa
      Data:
        type: object
        description: A JSON object of the log data fields and values
        example: |
          {
            ip: "/213.12.11.10:15768"
            external-user: awsome_user@company.io
            command: docker ps
            action: COMMAND
            actionStatus: SUCCESS
            failureReason: null
            "@timestamp": '2018-08-02T13:37:00.666Z'
            application: sshapp.mycomp.luminatesite.com
            internal-user: ubuntu
            id: 7de1eb30-5b67-4e6b-92d1-541681492da7
            client_version: SSH-2.0-OpenSSH_6.8
          }
      SearchAfterValues:
        type: array
        items:
          type: object
        description: The values array to be used in search field search_after if paging is required.
        example: [1533217020000, "luminate-ssh#7b105286-3dbb-01df-611d-76ef4a5668aa"]

## The SSHLogRequest resource ##
  SSHLogRequest:
    type: object
    required:
      - query
    example: |
      {
      	"size" : 500,
      	"query": {
      		"free_text": "ps",
      		"from_date": 1533217020000
      	},
      	"search_after" : []
      }
    properties:
      size:
        type: integer
        description: The maximum number of results to return. This is limited to 1000, and defaults to 1000
        example: 500
      query:
        type: object
        $ref: '#/definitions/SearchQuery'
      search_after:
        type: object
        $ref: '#/definitions/SearchAfter'
## The RDPLogRequest resource ##
  RDPLogSearchResults:
    type: object
    example: |
     {
        "Hits": 42,
        "Logs": [
            {
              "Id": "7b105286-3dbb-01df-611d-76ef4a5668aa",
              "Data": {
                ip: "/213.12.11.10:15768"
                external-user: awsome_user@company.io
                action: CONNECT
                actionStatus: SUCCESS
                failureReason: null
                "@timestamp": '2018-08-02T13:37:0.666Z'
                application: rdpapp.company.luminatesec.com
                internal-user: john
                id: 7b105286-3dbb-01df-611d-76ef4a5668aa
              },
              "SearchAfterValues": [
                1533217020000,
                "luminate-rdp#7b105286-3dbb-01df-611d-76ef4a5668aa"
               ]
            },
            ....
        ]
     }
    properties:
      Hits:
        type: integer
        description: Total number of logs found that match the query.
        example: 15
      Logs:
        type: array
        items:
          $ref: '#/definitions/RDPLogResult'
  RDPLogResult:
    type: object
    properties:
      Id:
        type: string
        description: The log ID
        example: "7b105286-3dbb-01df-611d-76ef4a5668aa"
      Data:
        type: object
        description: A JSON object of the log data fields and values
        example: |
          {
            ip: "/213.12.11.10:15768"
            external-user: awsome_user@company.io
            action: CONNECT
            actionStatus: SUCCESS
            failureReason: null
            "@timestamp": '2018-08-02T13:37:0.666Z'
            application: rdpapp.company.luminatesec.com
            internal-user: john
            id: 7b105286-3dbb-01df-611d-76ef4a5668aa
          }
      SearchAfterValues:
        type: array
        items:
          type: object
        description: The values array to be used in search field search_after if paging is required.
        example: [1533217020000, "luminate-rdp#7b105286-3dbb-01df-611d-76ef4a5668aa"]

## The RDPLogRequest resource ##
  RDPLogRequest:
    type: object
    required:
      - query
    example: |
      {
      	"size" : 500,
      	"query": {
      		"free_text": "CONNECT",
      		"from_date": 1533217020000
      	},
      	"search_after" : []
      }
    properties:
      size:
        type: integer
        description: The maximum number of results to return. This is limited to 1000, and defaults to 1000
        example: 500
      query:
        $ref: '#/definitions/SearchQuery'
      search_after:
        type: object
        $ref: '#/definitions/SearchAfter'

## The MetadataResults resource ##
  MetadataResults:
    type: object
    required:
      - Properties
    properties:
      Properties:
        type: object
        description: The properties of all fields
    example:
      "Properties" : {
                        "@timestamp" : {
                          "type" : "date"
                        },
                        "agent" : {
                          "type" : "text"
                        },
                        "bytes" : {
                          "type" : "long"
                        },
                        "clientip" : {
                          "type" : "text"
                        },
                        "content_type" : {
                          "type" : "text"
                        },
                        "geoip" : {
                          "properties" : {
                            "city_name" : {
                              "type" : "text"
                            },
                            "continent_code" : {
                              "type" : "text"
                            },
                            "country_code2" : {
                              "type" : "text"
                            },
                            "country_code3" : {
                              "type" : "text"
                            },
                            "country_name" : {
                              "type" : "text"
                            },
                            "ip" : {
                              "type" : "text"
                            },
                            "latitude" : {
                              "type" : "float"
                            },
                            "location" : {
                              "type" : "geo_point"
                            },
                            "longitude" : {
                              "type" : "float"
                            },
                            "region_code" : {
                              "type" : "text"
                            },
                            "region_name" : {
                              "type" : "text"
                            },
                            "timezone" : {
                              "type" : "text"
                            }
                          }
                        }
                  }